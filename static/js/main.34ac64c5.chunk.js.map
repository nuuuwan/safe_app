{"version":3,"sources":["stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","state","latLng","undefined","acceleration","statusList","status","newStatusList","this","push","setState","position","coords","latitude","longitude","e","permissionState","setStatus","window","addEventListener","onDeviceMotionEvent","a","DeviceMotionEvent","requestPermission","then","onGetDeviceMotionEventPermission","catch","navigator","geolocation","getCurrentPosition","onGetCurrentPosition","bind","map","i","JSON","stringify","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAIqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAQC,EACRC,kBAAcD,EACdE,WAAY,IALG,E,6CASnB,SAAUC,GACR,IAAIC,EAAgBC,KAAKP,MAAMI,WAC/BE,EAAcE,KAAKH,GACnBE,KAAKE,SAAS,CAAEH,oB,kCAGlB,SAAqBI,GACnB,IAAMT,EAAS,CAACS,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WAC1DN,KAAKE,SAAS,CAAER,a,iCAGlB,SAAoBa,GAClB,IAAMX,EAAeW,EAAEX,aACvBI,KAAKE,SAAS,CAAEN,mB,8CAGlB,SAAiCY,GAC/BR,KAAKS,UAAL,4BAAoCD,IAEZ,YAApBA,GACFE,OAAOC,iBAAiB,eAAgBX,KAAKY,qBAAqB,K,sEAItE,sBAAAC,EAAA,sDACEb,KAAKS,UAAU,oDAEbK,mBAC+C,oBAAxCA,kBAAkBC,mBAEzBf,KAAKS,UAAU,yBACfK,kBAAkBC,oBACfC,KAAKhB,KAAKiB,kCACVC,MAAMlB,KAAKS,YAEdT,KAAKS,UAAU,+CAGjBU,UAAUC,YAAYC,mBACpBrB,KAAKsB,qBAAqBC,KAAKvB,OAfnC,gD,0EAmBA,WACE,MAA6CA,KAAKP,MAA1CC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,aAAcC,EAA9B,EAA8BA,WAC9B,OACE,gCACE,4BACE,4BA5DM,uBA+DR,0CACA,6BACGA,EAAW2B,KAAI,SAAU1B,EAAQ2B,GAChC,OAAO,6BAA4B3B,GAA5B,oBAAsB2B,SAGjC,0CACA,4BAAIC,KAAKC,UAAUjC,KACnB,8CACA,4BAAIgC,KAAKC,UAAU/B,Y,GAtEWgC,aCIvBC,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.34ac64c5.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nconst VERSION = \"version: 12.27pm\";\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latLng: undefined,\n      acceleration: undefined,\n      statusList: [],\n    };\n  }\n\n  setStatus(status) {\n    let newStatusList = this.state.statusList;\n    newStatusList.push(status);\n    this.setState({ newStatusList });\n  }\n\n  onGetCurrentPosition(position) {\n    const latLng = [position.coords.latitude, position.coords.longitude];\n    this.setState({ latLng });\n  }\n\n  onDeviceMotionEvent(e) {\n    const acceleration = e.acceleration;\n    this.setState({ acceleration });\n  }\n\n  onGetDeviceMotionEventPermission(permissionState) {\n    this.setStatus(`permissionState = ${permissionState}`);\n\n    if (permissionState === \"granted\") {\n      window.addEventListener(\"devicemotion\", this.onDeviceMotionEvent, false);\n    }\n  }\n\n  async componentDidMount() {\n    this.setStatus(\"Checking for DeviceMotionEvent.requestPermission\");\n    if (\n      DeviceMotionEvent &&\n      typeof DeviceMotionEvent.requestPermission === \"function\"\n    ) {\n      this.setStatus(\"Requesting Permission\");\n      DeviceMotionEvent.requestPermission()\n        .then(this.onGetDeviceMotionEventPermission)\n        .catch(this.setStatus);\n    } else {\n      this.setStatus(\"DeviceMotionEvent.requestPermission missing\");\n    }\n\n    navigator.geolocation.getCurrentPosition(\n      this.onGetCurrentPosition.bind(this)\n    );\n  }\n\n  render() {\n    const { latLng, acceleration, statusList } = this.state;\n    return (\n      <div>\n        <p>\n          <i>{VERSION}</i>\n        </p>\n\n        <h1>Safe App</h1>\n        <ul>\n          {statusList.map(function (status, i) {\n            return <li key={`li-status-${i}`}>{status}</li>;\n          })}\n        </ul>\n        <h2>Location</h2>\n        <p>{JSON.stringify(latLng)}</p>\n        <h2>Acceleration</h2>\n        <p>{JSON.stringify(acceleration)}</p>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}