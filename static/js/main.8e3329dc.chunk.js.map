{"version":3,"sources":["stateful/pages/HomePage.js","App.js","reportWebVitals.js","index.js"],"names":["HomePage","props","state","latLng","undefined","acceleration","window","addEventListener","onDeviceMotionEvent","position","coords","latitude","longitude","this","setState","e","a","navigator","geolocation","getCurrentPosition","onGetCurrentPosition","bind","JSON","stringify","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAEqBA,E,kDACnB,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACXC,YAAQC,EACRC,kBAAcD,GAEhBE,OAAOC,iBAAiB,eAAgB,EAAKC,qBAAqB,GANjD,E,wDASnB,SAAqBC,GACnB,IAAMN,EAAS,CAACM,EAASC,OAAOC,SAAUF,EAASC,OAAOE,WAC1DC,KAAKC,SAAS,CAAEX,a,iCAGlB,SAAoBY,GAClB,IAAMV,EAAeU,EAAEV,aACvBQ,KAAKC,SAAS,CAAET,mB,sEAGlB,sBAAAW,EAAA,sDACEC,UAAUC,YAAYC,mBACpBN,KAAKO,qBAAqBC,KAAKR,OAFnC,gD,0EAMA,WACE,MAAiCA,KAAKX,MAA9BC,EAAR,EAAQA,OAAQE,EAAhB,EAAgBA,aAChB,OACE,gCACE,0CACA,0CACA,4BAAIiB,KAAKC,UAAUpB,KACnB,8CACA,4BAAImB,KAAKC,UAAUlB,Y,GAlCWmB,aCMvBC,MAJf,WACE,OAAO,cAAC,EAAD,KCOMC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.8e3329dc.chunk.js","sourcesContent":["import { Component } from \"react\";\n\nexport default class HomePage extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      latLng: undefined,\n      acceleration: undefined,\n    };\n    window.addEventListener(\"devicemotion\", this.onDeviceMotionEvent, false);\n  }\n\n  onGetCurrentPosition(position) {\n    const latLng = [position.coords.latitude, position.coords.longitude];\n    this.setState({ latLng });\n  }\n\n  onDeviceMotionEvent(e) {\n    const acceleration = e.acceleration;\n    this.setState({ acceleration });\n  }\n\n  async componentDidMount() {\n    navigator.geolocation.getCurrentPosition(\n      this.onGetCurrentPosition.bind(this)\n    );\n  }\n\n  render() {\n    const { latLng, acceleration } = this.state;\n    return (\n      <div>\n        <h1>Safe App</h1>\n        <h2>Location</h2>\n        <p>{JSON.stringify(latLng)}</p>\n        <h2>Acceleration</h2>\n        <p>{JSON.stringify(acceleration)}</p>\n      </div>\n    );\n  }\n}\n","import \"./App.css\";\n\nimport HomePage from \"./stateful/pages/HomePage.js\";\n\nfunction App() {\n  return <HomePage />;\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}